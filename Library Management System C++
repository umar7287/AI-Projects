
// Library Management System (C++)

#include <iostream>
#include <string>
using namespace std;

struct Book {
    int id;
    string title;
    string author;
};

const int MAX_BOOKS = 100;
Book library[MAX_BOOKS];
int bookCount = 0;

// Function to add a new book
void addBook() {
    if (bookCount >= MAX_BOOKS) {
        cout << "Library is full! Cannot add more books.\n";
        return;
    }
    cout << "\nEnter Book ID: ";
    cin >> library[bookCount].id;
    cin.ignore();
    cout << "Enter Book Title: ";
    getline(cin, library[bookCount].title);
    cout << "Enter Author Name: ";
    getline(cin, library[bookCount].author);
    bookCount++;
    cout << "Book added successfully!\n";
}

// Function to delete a book by ID
void deleteBook() {
    int id;
    cout << "\nEnter Book ID to delete: ";
    cin >> id;

    for (int i = 0; i < bookCount; i++) {
        if (library[i].id == id) {
            // Shift elements left to fill the gap
            for (int j = i; j < bookCount - 1; j++) {
                library[j] = library[j + 1];
            }
            bookCount--;
            cout << "Book deleted successfully!\n";
            return;
        }
    }
    cout << "Book not found!\n";
}

// Function to edit an existing book by ID
void editBook() {
    int id;
    cout << "\nEnter Book ID to edit: ";
    cin >> id;
    cin.ignore();

    for (int i = 0; i < bookCount; i++) {
        if (library[i].id == id) {
            cout << "Enter new title: ";
            getline(cin, library[i].title);
            cout << "Enter new author: ";
            getline(cin, library[i].author);
            cout << "Book details updated successfully!\n";
            return;
        }
    }
    cout << "Book not found!\n";
}

// Function to display all books
void showBooks() {
    if (bookCount == 0) {
        cout << "\nNo books in the library.\n";
        return;
    }
    cout << "\nLibrary Books:\n";
    for (int i = 0; i < bookCount; i++) {
        cout << "ID: " << library[i].id
             << " | Title: " << library[i].title
             << " | Author: " << library[i].author << endl;
    }
}

int main() {
    int choice;

    do {
        cout << "\n===== LIBRARY MANAGEMENT SYSTEM =====\n";
        cout << "1. Add New Book\n";
        cout << "2. Delete Book\n";
        cout << "3. Edit Book\n";
        cout << "4. Show All Books\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addBook(); break;
            case 2: deleteBook(); break;
            case 3: editBook(); break;
            case 4: showBooks(); break;
            case 5: cout << "Exiting program...\n"; break;
            default: cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 5);

    return 0;
}
